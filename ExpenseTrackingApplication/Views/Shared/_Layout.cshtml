@using System.Security.Claims
@using ExpenseTrackingApplication.Utilities
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Security.Claims
@inject ExpenseTrackingApplication.Interfaces.IBudgetRepository BudgetRepository

@{
    var userId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    var userBudgets = new List<Budget>();
    
    if (!string.IsNullOrEmpty(userId))
    {
        userBudgets = (await BudgetRepository.GetBudgetByUserAsync(userId)).ToList();
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - ExpensesTracker</title>
    
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/css/_layout.css" asp-append-version="true"/>
</head>

<body>
<header>
    <nav class="navbar navbar-expand-sm navbar-light mb-3">
        <div class="container">
            <div>
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">ExpensesTracker</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
            </div>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle text-dark" href="#" id="budgetDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Budget
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="budgetDropdown">
                            <li><a class="dropdown-item" asp-area="" asp-controller="Budget" asp-action="Index">Overview</a></li>
                            <li><a class="dropdown-item" asp-area="" asp-controller="Budget" asp-action="AddNewBudget">Add New Budget</a></li>
                            
                            @if (User.Identity is { IsAuthenticated: true }) // Only show user's budgets if authenticated
                            {
                                <li class="dropdown-header text-muted" role="presentation">Your Budgets:</li>
                                @foreach (var budget in userBudgets)
                                {
                                    <li>
                                        <a class="dropdown-item" asp-area="" asp-controller="Budget" asp-action="Details" asp-route-id="@budget.Id">
                                            @budget.Name
                                        </a>
                                    </li>
                                }
                            }
                        </ul>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle text-dark" href="#" id="reportDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Report
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="reportDropdown">
                            <li><a class="dropdown-item" asp-area="" asp-controller="Report" asp-action="Index">All Reports</a></li>
                            <li><a class="dropdown-item" asp-area="" asp-controller="Report" asp-action="CreateMonthlySummary">Monthly Summary</a></li>
                            <li><a class="dropdown-item" asp-area="" asp-controller="Report" asp-action="CreateExpensesByCategory">Expenses By Category</a></li>
                            <li><a class="dropdown-item" asp-area="" asp-controller="Report" asp-action="CreateTrendAnalysis">Trend Analysis</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                    </li>
                </ul>
                <ul class="navbar-nav">
                    @if (User.Identity is { IsAuthenticated: true })
                    {
                        @if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Management" asp-action="Index">Management</a>
                            </li>
                        }
                        
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Notification" asp-action="Index">
                                <img id="notificationIcon" src="https://res.cloudinary.com/ggeztrw22/image/upload/v1726138443/icons/notification.png" alt="Notifications" style="width: 24px; height: 24px;" />
                            </a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" asp-controller="User" asp-action="Index">
                                @if (!string.IsNullOrEmpty(User.FindFirstValue(CustomClaimTypes.Avatar)))
                                {
                                    <img src="@User.FindFirstValue(CustomClaimTypes.Avatar)" alt="Avatar" class="rounded-circle" style="width: 30px; height: 30px; object-fit: cover;" />
                                }
                                else
                                {
                                    <img src="https://res.cloudinary.com/ggeztrw22/image/upload/v1722424290/avatars/default.jpg" alt="Avatar" class="rounded-circle" style="width: 30px; height: 30px; object-fit: cover;" />
                                }
                                @User.Identity.Name
                            </a>
                        </li>
                        <li class="nav-item">
                            <form method="post" asp-area="" asp-controller="Account" asp-action="Logout">
                                <button class="btn btn-outline-danger">Logout</button>
                            </form>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Login">Sign In</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Register">Sign Up</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
</header>

<div class="container">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

<footer class="border-top footer text-muted">
    <div class="container">
        &copy; 2024 - ExpensesTracker - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
</footer>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>

<script>
    $(document).ready(function () {
        // Function to check notifications
        function checkNotifications() {
            $.ajax({
                url: '@Url.Action("GetUnreadNotifications", "Notification")',
                method: 'GET',
                success: function (data) {
                    var notificationIcon = data.hasUnread
                        ? "https://res.cloudinary.com/ggeztrw22/image/upload/v1726139251/icons/notification_unread.png"
                        : "https://res.cloudinary.com/ggeztrw22/image/upload/v1726138443/icons/notification.png";

                    $('#notificationIcon').attr('src', notificationIcon);
                },
                error: function () {
                    console.error("Error checking notifications");
                }
            });
        }

        // Check notifications immediately and every 30 seconds
        checkNotifications();
        setInterval(checkNotifications, 30000); // 30 seconds
    });

</script>

@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
