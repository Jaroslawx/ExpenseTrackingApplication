@model ExpenseTrackingApplication.ViewModels.BudgetViewModels.BudgetEditViewModel

@{
ViewData["Title"] = "Edit Budget";
}

<h2>Edit Budget: @Model.Name</h2>

<form method="post" asp-action="Edit">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label asp-for="Name" class="control-label">Budget Name</label>
        <input asp-for="Name" class="form-control"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Save New Name</button>
</form>

<div>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4>Expenses</h4>
        <div>
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#CreateExpenseModal-@Model.Id">Add Expense</button>
            @await Html.PartialAsync("~/Views/Expense/_CreateExpensePartialView.cshtml", new Expense { BudgetId = Model.Id })
        </div>
    </div>
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Recipient</th>
            <th>Amount</th>
            <th>Category</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var expense in Model.Expenses)
        {
            <tr>
                <td>@expense.Date.ToShortDateString()</td>
                <td>@expense.Recipient</td>
                <td>@expense.Amount</td>
                <td>@expense.Category</td>
                <td>@expense.Description</td>
                <td>
                    <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#EditExpenseModal-@expense.Id">Edit</button>
                    @await Html.PartialAsync("~/Views/Expense/_EditExpensePartialView.cshtml", new ExpenseTrackingApplication.ViewModels.TransactionViewModels.ExpenseEditViewModel
                    {
                        Id = expense.Id,
                        BudgetId = expense.BudgetId,
                        Recipient = expense.Recipient,
                        Amount = expense.Amount,
                        Date = expense.Date,
                        Category = expense.Category,
                        Description = expense.Description
                    })
                    
                    <a asp-controller="Expense" asp-action="Delete" asp-route-id="@expense.Id" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4>Incomes</h4>
        <div>
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#CreateIncomeModal-@Model.Id">Add Income</button>
            @await Html.PartialAsync("~/Views/Income/_CreateIncomePartialView.cshtml", new Income { BudgetId = Model.Id })
        </div>
    </div>
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Source</th>
            <th>Amount</th>
            <th>Category</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var income in Model.Incomes)
        {
            <tr>
                <td>@income.Date.ToShortDateString()</td>
                <td>@income.Source</td>
                <td>@income.Amount</td>
                <td>@income.Category</td>
                <td>@income.Description</td>
                <td>
                    <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#EditIncomeModal-@income.Id">Edit</button>
                    @await Html.PartialAsync("~/Views/Income/_EditIncomePartialView.cshtml", new ExpenseTrackingApplication.ViewModels.TransactionViewModels.IncomeEditViewModel
                    {
                    Id = income.Id,
                    BudgetId = income.BudgetId,
                    Source = income.Source,
                    Amount = income.Amount,
                    Date = income.Date,
                    Category = income.Category,
                    Description = income.Description
                    })
                    
                    <a asp-controller="Income" asp-action="Delete" asp-route-id="@income.Id" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4>Bills</h4>
        <div>
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#CreateBillModal-@Model.Id">Add Bill</button>
            @await Html.PartialAsync("~/Views/Bill/_CreateBillPartialView.cshtml", new Bill { BudgetId = Model.Id })
        </div>
    </div>
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Amount</th>
            <th>DueDate</th>
            <th>Frequency</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var bill in Model.Bills)
        {
            <tr>
                <td>@bill.Name</td>
                <td>@bill.Amount</td>
                <td>@bill.DueDate.ToShortDateString()</td>
                <td>@bill.Frequency.ToString()</td>
                <td>@(bill.IsPaid ? "Paid" : "Unpaid")</td>
                <td>
                    <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#EditBillModal-@bill.Id">Edit</button>
                    @await Html.PartialAsync("~/Views/Bill/_EditBillPartialView.cshtml", new ExpenseTrackingApplication.ViewModels.TransactionViewModels.BillEditViewModel
                    {
                    Id = bill.Id,
                    BudgetId = bill.BudgetId,
                    Name = bill.Name,
                    Amount = bill.Amount,
                    DueDate = bill.DueDate,
                    Frequency = bill.Frequency
                    })
                    
                    <a asp-controller="Bill" asp-action="Delete" asp-route-id="@bill.Id" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div>
    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">Back to Details</a>
    <a asp-action="Overview" class="btn btn-outline-primary">Back to Overview</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}